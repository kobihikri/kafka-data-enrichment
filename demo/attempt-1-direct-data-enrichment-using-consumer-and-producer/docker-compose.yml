version: '3.9'

services:

  zookeeper:
    build: 
      context: ../../apache-kafka/zookeeper
      dockerfile: ./Dockerfile
    ports: ["2181:2181"]
    environment:
      ZOOKEEPER_LOG_DIR: ./zookeeper_logDir
      ZOOKEEPER_DATA_DIR: ./zookeeper_dataDir
      ZOOKEEPER_PORT: 2181
    restart: always

  kafka:
    build:
      context: ../../apache-kafka/kafka
      dockerfile: ./Dockerfile
    environment: 
      JMX_PORT: 9999
      KAFKA_BROKER_ID: 1
      KAFKA_LOG_DIR: ./kafka_logDir
      KAFKA_DATA_DIR: ./kafka_dataDir
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_NUM_PARTITIONS: 2
    restart: always

  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"
      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"

  redis:
    image: redis:alpine
    ports: ["6379:6379"]
    restart: always

  redis-commander:
    image: rediscommander/redis-commander
    ports: ["8081:8081"]
    environment:
      REDIS_HOSTS: local:redis:6379
    restart: always

  demo-raw-data-kafka-producer:
    build:
      context: ../data-producers/raw-data-kafka-producer
      dockerfile: ./Dockerfile
    restart: always

  demo-enrichment-data-redis-producer:
    build:
      context: ../data-producers/enrichment-data-redis-producer
      dockerfile: ./Dockerfile
    restart: always

  demo-direct-data-enrichment-using-kafka-consumer-and-kafka-producer:
    build:
      context: ../direct-data-enrichment
      dockerfile: ./Dockerfile
    restart: always